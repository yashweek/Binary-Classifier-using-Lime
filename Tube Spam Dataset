{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Tube Spam Dataset","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOtxSmrU4jkP8rA4Dp1P4HA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"2z1vMaCI3qxt","colab":{"base_uri":"https://localhost:8080/","height":335},"executionInfo":{"status":"ok","timestamp":1618366697903,"user_tz":240,"elapsed":753,"user":{"displayName":"Yashwee Kothari","photoUrl":"https://lh4.googleusercontent.com/-3rN814PecHo/AAAAAAAAAAI/AAAAAAAAAcM/b9K8OLtZwlM/s64/photo.jpg","userId":"01410541868891785676"}},"outputId":"d990573a-383c-4b98-f671-fdd36af1b2f4"},"source":["#Spam = \"1\" and legitimate comments = \"0\" \n","import pandas as pd\n","import numpy as np\n","import nltk\n","from nltk.corpus import stopwords\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.model_selection import train_test_split\n","from sklearn.naive_bayes import MultinomialNB\n","from xgboost import XGBClassifier\n","from sklearn.metrics import classification_report,confusion_matrix, accuracy_score\n","import string\n","\n","all_files = pd.concat([pd.read_csv(f) for f in [  'https://raw.githubusercontent.com/yashweek/lime_datasets/main/TubeSpam/LMFAO.csv',\n","                                                  'https://raw.githubusercontent.com/yashweek/lime_datasets/main/TubeSpam/Eminem.csv',\n","                                                   'https://raw.githubusercontent.com/yashweek/lime_datasets/main/TubeSpam/KatyPerry.csv',\n","                                                   'https://raw.githubusercontent.com/yashweek/lime_datasets/main/TubeSpam/Psy.csv',\n","                                                   'https://raw.githubusercontent.com/yashweek/lime_datasets/main/TubeSpam/Shakira.csv']])\n","\n","all_files.to_csv( \"all_files.csv\", index=False, encoding='utf-8-sig')\n","df= pd.read_csv('all_files.csv')\n","df.head(10)\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>COMMENT_ID</th>\n","      <th>AUTHOR</th>\n","      <th>DATE</th>\n","      <th>CONTENT</th>\n","      <th>CLASS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>z13uwn2heqndtr5g304ccv5j5kqqzxjadmc0k</td>\n","      <td>Corey Wilson</td>\n","      <td>2015-05-28T21:39:52.376000</td>\n","      <td>&lt;a href=\"http://www.youtube.com/watch?v=KQ6zr6...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>z124jvczaz3dxhnbc04cffk43oiugj25yzo0k</td>\n","      <td>Epic Gaming</td>\n","      <td>2015-05-28T20:07:20.610000</td>\n","      <td>wierd but funny﻿</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>z13tczjy5xj0vjmu5231unho1ofey5zdk</td>\n","      <td>LaS Music</td>\n","      <td>2015-05-28T19:23:35.355000</td>\n","      <td>Hey guys, I&amp;#39;m a human.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Bu...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>z13tzr0hdpnayhqqc04cd3zqqqjkf3ngckk0k</td>\n","      <td>Cheryl Fox</td>\n","      <td>2015-05-28T17:49:35.294000</td>\n","      <td>Party Rock....lol...who wants to shuffle!!!﻿</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>z12pcvix4zedcjvyb04ccr1r0mr2g5xwyng0k</td>\n","      <td>PATRICK_TW</td>\n","      <td>2015-05-28T16:28:26.818000</td>\n","      <td>Party rock﻿</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>z13rcnlyamexujnf022vcrb5qouetpjz404</td>\n","      <td>Brian Brai</td>\n","      <td>2015-05-28T08:58:10.905000</td>\n","      <td>Shuffle﻿</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>z13oe5si1ouygx2dv22vcrb5qouetpjz404</td>\n","      <td>Brian Brai</td>\n","      <td>2015-05-28T08:57:27.399000</td>\n","      <td>Omg﻿</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>z123izobdqqyszmsx231cfuahxfjwjmpk04</td>\n","      <td>Alex DeFeo</td>\n","      <td>2015-05-28T04:15:22.615000</td>\n","      <td>This song is just really fun ﻿</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>z13ghh0z5z3li1q1i22jdjma0xn2z535404</td>\n","      <td>Giovanni Jimenez</td>\n","      <td>2015-05-28T03:52:56.877000</td>\n","      <td>Awsome&lt;br /&gt;﻿</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>z13lwnoznomnynobc04cd5oylkz4vbngkhk</td>\n","      <td>Silvia Bascur</td>\n","      <td>2015-05-28T03:26:23.957000</td>\n","      <td>wow!!!!!! increible song!!!!!!!!!﻿</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                              COMMENT_ID  ... CLASS\n","0  z13uwn2heqndtr5g304ccv5j5kqqzxjadmc0k  ...     0\n","1  z124jvczaz3dxhnbc04cffk43oiugj25yzo0k  ...     0\n","2      z13tczjy5xj0vjmu5231unho1ofey5zdk  ...     1\n","3  z13tzr0hdpnayhqqc04cd3zqqqjkf3ngckk0k  ...     0\n","4  z12pcvix4zedcjvyb04ccr1r0mr2g5xwyng0k  ...     0\n","5    z13rcnlyamexujnf022vcrb5qouetpjz404  ...     0\n","6    z13oe5si1ouygx2dv22vcrb5qouetpjz404  ...     0\n","7    z123izobdqqyszmsx231cfuahxfjwjmpk04  ...     0\n","8    z13ghh0z5z3li1q1i22jdjma0xn2z535404  ...     0\n","9    z13lwnoznomnynobc04cd5oylkz4vbngkhk  ...     0\n","\n","[10 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RkSJurYv6Cw9","executionInfo":{"status":"ok","timestamp":1618366698087,"user_tz":240,"elapsed":929,"user":{"displayName":"Yashwee Kothari","photoUrl":"https://lh4.googleusercontent.com/-3rN814PecHo/AAAAAAAAAAI/AAAAAAAAAcM/b9K8OLtZwlM/s64/photo.jpg","userId":"01410541868891785676"}},"outputId":"a715d363-ab3d-4e82-9b60-9e20cba5af55"},"source":["#downloading stopwords\n","nltk.download('stopwords')\n","\n","#process to tokenize the data\n","def tokenize(data):\n","  #removing punctuations \n","  punc_free = [char for char in data if char not in string.punctuation]\n","  punc_free= ''.join(punc_free)\n","\n","  processed_text = [word for word in punc_free.split() if word.lower() not in stopwords.words('english')]\n","  return processed_text\n","\n","#checking first few lines\n","df['CONTENT'].head().apply(tokenize)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["0    [hrefhttpwwwyoutubecomwatchvKQ6zr6kCPj8ampt2m1...\n","1                                      [wierd, funny﻿]\n","2    [Hey, guys, I39m, humanbr, br, br, don39t, wan...\n","3                 [Party, Rocklolwho, wants, shuffle﻿]\n","4                                       [Party, rock﻿]\n","Name: CONTENT, dtype: object"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"U0-2d7Jc967a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618366702654,"user_tz":240,"elapsed":5489,"user":{"displayName":"Yashwee Kothari","photoUrl":"https://lh4.googleusercontent.com/-3rN814PecHo/AAAAAAAAAAI/AAAAAAAAAcM/b9K8OLtZwlM/s64/photo.jpg","userId":"01410541868891785676"}},"outputId":"71eb7c41-377c-4826-9087-94114dbd8c6a"},"source":["#tokenizing all the data in content column\n","\n","vectorize = CountVectorizer(max_features=500, min_df=0, analyzer=tokenize)\n","\n","\n","matrix = vectorize.fit_transform(df['CONTENT'])\n","\n","#spliting data into 80% train and 20% test\n","X_train, X_test, y_train, y_test = train_test_split(matrix, df['CLASS'], test_size = 0.20, random_state = 0)\n","\n","matrix.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1956, 500)"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"wYYCOSoq-faS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618366703376,"user_tz":240,"elapsed":6206,"user":{"displayName":"Yashwee Kothari","photoUrl":"https://lh4.googleusercontent.com/-3rN814PecHo/AAAAAAAAAAI/AAAAAAAAAcM/b9K8OLtZwlM/s64/photo.jpg","userId":"01410541868891785676"}},"outputId":"c55be8de-5e36-4fb3-c59f-bf2ac587f98b"},"source":["#creating classifier\n","classifier =  XGBClassifier(max_depth=40, n_estimators=100, learning_rate=0.5)\n","classifier.fit(X_train, y_train)\n","\n","#predicting 80% training data\n","y_pred= classifier.predict(X_train)\n","\n","\n","#evaluating the model using report and score\n","print(classification_report(y_train ,y_pred ))\n","print('Training Accuracy: ', accuracy_score(y_train,y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.86      0.99      0.92       747\n","           1       0.99      0.85      0.92       817\n","\n","    accuracy                           0.92      1564\n","   macro avg       0.93      0.92      0.92      1564\n","weighted avg       0.93      0.92      0.92      1564\n","\n","Training Accuracy:  0.9187979539641944\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VLEY8eAn_b8n","executionInfo":{"status":"ok","timestamp":1618366703377,"user_tz":240,"elapsed":6201,"user":{"displayName":"Yashwee Kothari","photoUrl":"https://lh4.googleusercontent.com/-3rN814PecHo/AAAAAAAAAAI/AAAAAAAAAcM/b9K8OLtZwlM/s64/photo.jpg","userId":"01410541868891785676"}},"outputId":"eaa62ac2-67ce-46c0-a3e8-df9c5ebec9e4"},"source":["#running model on test set\n","\n","#predicting on test split\n","y_Testpred = classifier.predict(X_test)\n","\n","\n","#evaluating model for test data\n","print(classification_report(y_test ,y_Testpred ))\n","print('Test Accuracy: ', accuracy_score(y_test,y_Testpred))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.87      0.96      0.91       204\n","           1       0.95      0.84      0.89       188\n","\n","    accuracy                           0.90       392\n","   macro avg       0.91      0.90      0.90       392\n","weighted avg       0.91      0.90      0.90       392\n","\n","Test Accuracy:  0.9030612244897959\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Am5jva_83o5","executionInfo":{"status":"ok","timestamp":1618366712347,"user_tz":240,"elapsed":15166,"user":{"displayName":"Yashwee Kothari","photoUrl":"https://lh4.googleusercontent.com/-3rN814PecHo/AAAAAAAAAAI/AAAAAAAAAcM/b9K8OLtZwlM/s64/photo.jpg","userId":"01410541868891785676"}},"outputId":"06611533-66b5-4b8f-fb00-72a23879073d"},"source":["#clone lime git repo here\n","!git clone https://github.com/marcotcr/lime.git\n","\n","!pip install lime"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Cloning into 'lime'...\n","remote: Enumerating objects: 2297, done.\u001b[K\n","remote: Total 2297 (delta 0), reused 0 (delta 0), pack-reused 2297\u001b[K\n","Receiving objects: 100% (2297/2297), 20.35 MiB | 23.63 MiB/s, done.\n","Resolving deltas: 100% (1537/1537), done.\n","Collecting lime\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f5/86/91a13127d83d793ecb50eb75e716f76e6eda809b6803c5a4ff462339789e/lime-0.2.0.1.tar.gz (275kB)\n","\u001b[K     |████████████████████████████████| 276kB 22.3MB/s \n","\u001b[?25hRequirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from lime) (3.2.2)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from lime) (1.19.5)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from lime) (1.4.1)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from lime) (4.41.1)\n","Requirement already satisfied: scikit-learn>=0.18 in /usr/local/lib/python3.7/dist-packages (from lime) (0.22.2.post1)\n","Requirement already satisfied: scikit-image>=0.12 in /usr/local/lib/python3.7/dist-packages (from lime) (0.16.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->lime) (0.10.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->lime) (2.4.7)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->lime) (1.3.1)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->lime) (2.8.1)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.18->lime) (1.0.1)\n","Requirement already satisfied: imageio>=2.3.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image>=0.12->lime) (2.4.1)\n","Requirement already satisfied: networkx>=2.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image>=0.12->lime) (2.5.1)\n","Requirement already satisfied: pillow>=4.3.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image>=0.12->lime) (7.1.2)\n","Requirement already satisfied: PyWavelets>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image>=0.12->lime) (1.1.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from cycler>=0.10->matplotlib->lime) (1.15.0)\n","Requirement already satisfied: decorator<5,>=4.3 in /usr/local/lib/python3.7/dist-packages (from networkx>=2.0->scikit-image>=0.12->lime) (4.4.2)\n","Building wheels for collected packages: lime\n","  Building wheel for lime (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for lime: filename=lime-0.2.0.1-cp37-none-any.whl size=283846 sha256=91230f898b4ace59d25178b8129faf1f2a882181e9cb9987fa49076d46d77850\n","  Stored in directory: /root/.cache/pip/wheels/4c/4f/a5/0bc765457bd41378bf3ce8d17d7495369d6e7ca3b712c60c89\n","Successfully built lime\n","Installing collected packages: lime\n","Successfully installed lime-0.2.0.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1Nfh7kVRuDy-uLdgzD5yIYdzJDPRfk5xH"},"id":"rzRGki8Q-N1G","executionInfo":{"status":"ok","timestamp":1618366740085,"user_tz":240,"elapsed":42899,"user":{"displayName":"Yashwee Kothari","photoUrl":"https://lh4.googleusercontent.com/-3rN814PecHo/AAAAAAAAAAI/AAAAAAAAAcM/b9K8OLtZwlM/s64/photo.jpg","userId":"01410541868891785676"}},"outputId":"6a6ba32e-e62c-4529-afb9-21e4d461b72b"},"source":["import sklearn\n","import sklearn.datasets\n","import sklearn.ensemble\n","import lime\n","from lime.lime_text import LimeTextExplainer\n","from sklearn.pipeline import make_pipeline\n","\n","c = make_pipeline(vectorize, classifier)\n","class_names = ['0','1']\n","explainer = LimeTextExplainer(class_names=class_names)\n","\n","idx =10\n","for i in range(idx, idx+10):\n","  exp = explainer.explain_instance(df.CONTENT[i], c.predict_proba, num_features=6)\n","  print('Row #: ', i)\n","  print('Probability=', c.predict_proba([df.CONTENT[i]])[0,1])\n","  print('True class: %s' % df.CLASS[i])\n","\n","  #print(exp.as_list())\n","  exp.show_in_notebook()\n","  print(\"\\n----------------------------------------------------------\")"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]}]}